{"ast":null,"code":"import _objectSpread from \"/Users/pascalchristen/Documents/Development/searchzone-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/pascalchristen/Documents/Development/searchzone-website/src/App.js\";\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { ErrorBoundary, Facet, SearchProvider, SearchBox, Results, PagingInfo, ResultsPerPage, Paging, Sorting, WithSearch } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\nimport { buildAutocompleteQueryConfig, buildFacetConfigFromConfig, buildSearchOptionsFromConfig, buildSortOptionsFromConfig, getConfig, getFacetFields } from \"./config/config-helper\";\n\nvar _getConfig = getConfig(),\n    hostIdentifier = _getConfig.hostIdentifier,\n    searchKey = _getConfig.searchKey,\n    endpointBase = _getConfig.endpointBase,\n    engineName = _getConfig.engineName;\n\nvar connector = new AppSearchAPIConnector({\n  searchKey,\n  engineName,\n  hostIdentifier,\n  endpointBase\n});\nvar config = {\n  searchQuery: _objectSpread({\n    facets: buildFacetConfigFromConfig()\n  }, buildSearchOptionsFromConfig()),\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\nexport default function App() {\n  var _this = this;\n\n  return /*#__PURE__*/React.createElement(SearchProvider, {\n    config: config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WithSearch, {\n    mapContextToProps: function mapContextToProps(_ref) {\n      var searchTerm = _ref.searchTerm,\n          setSearchTerm = _ref.setSearchTerm,\n          results = _ref.results;\n      return {\n        searchTerm,\n        setSearchTerm,\n        results\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var searchTerm = _ref2.searchTerm,\n        setSearchTerm = _ref2.setSearchTerm,\n        results = _ref2.results;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: searchTerm,\n      onChange: function onChange(e) {\n        return setSearchTerm(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }), results.map(function (r) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: r.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, r.domain.raw);\n    }));\n  }));\n}","map":{"version":3,"sources":["/Users/pascalchristen/Documents/Development/searchzone-website/src/App.js"],"names":["React","AppSearchAPIConnector","ErrorBoundary","Facet","SearchProvider","SearchBox","Results","PagingInfo","ResultsPerPage","Paging","Sorting","WithSearch","Layout","buildAutocompleteQueryConfig","buildFacetConfigFromConfig","buildSearchOptionsFromConfig","buildSortOptionsFromConfig","getConfig","getFacetFields","hostIdentifier","searchKey","endpointBase","engineName","connector","config","searchQuery","facets","autocompleteQuery","apiConnector","alwaysSearchOnInitialLoad","App","searchTerm","setSearchTerm","results","e","target","value","map","r","id","domain","raw"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,qBAAP,MAAkC,yCAAlC;AAEA,SACEC,aADF,EAEEC,KAFF,EAGEC,cAHF,EAIEC,SAJF,EAKEC,OALF,EAMEC,UANF,EAOEC,cAPF,EAQEC,MARF,EASEC,OATF,EAUEC,UAVF,QAWO,0BAXP;AAYA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAO,sDAAP;AAEA,SACEC,4BADF,EAEEC,0BAFF,EAGEC,4BAHF,EAIEC,0BAJF,EAKEC,SALF,EAMEC,cANF,QAOO,wBAPP;;iBASgED,SAAS,E;IAAjEE,c,cAAAA,c;IAAgBC,S,cAAAA,S;IAAWC,Y,cAAAA,Y;IAAcC,U,cAAAA,U;;AACjD,IAAMC,SAAS,GAAG,IAAItB,qBAAJ,CAA0B;AAC1CmB,EAAAA,SAD0C;AAE1CE,EAAAA,UAF0C;AAG1CH,EAAAA,cAH0C;AAI1CE,EAAAA;AAJ0C,CAA1B,CAAlB;AAMA,IAAMG,MAAM,GAAG;AACbC,EAAAA,WAAW;AACTC,IAAAA,MAAM,EAAEZ,0BAA0B;AADzB,KAENC,4BAA4B,EAFtB,CADE;AAKbY,EAAAA,iBAAiB,EAAEd,4BAA4B,EALlC;AAMbe,EAAAA,YAAY,EAAEL,SAND;AAObM,EAAAA,yBAAyB,EAAE;AAPd,CAAf;AAUA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,sBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,iBAAiB,EAAE;AAAA,UAAGO,UAAH,QAAGA,UAAH;AAAA,UAAeC,aAAf,QAAeA,aAAf;AAAA,UAA8BC,OAA9B,QAA8BA,OAA9B;AAAA,aAA6C;AAC9DF,QAAAA,UAD8D;AAE9DC,QAAAA,aAF8D;AAG9DC,QAAAA;AAH8D,OAA7C;AAAA,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,iBAA4C;AAAA,QAAzCF,UAAyC,SAAzCA,UAAyC;AAAA,QAA7BC,aAA6B,SAA7BA,aAA6B;AAAA,QAAdC,OAAc,SAAdA,OAAc;AAC3C,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAEF,UADT;AAEE,MAAA,QAAQ,EAAE,kBAAAG,CAAC;AAAA,eAAIF,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKGH,OAAO,CAACI,GAAR,CAAY,UAAAC,CAAC;AAAA,0BACZ;AAAK,QAAA,GAAG,EAAEA,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,CAAC,CAACE,MAAF,CAASC,GAA1B,CADY;AAAA,KAAb,CALH,CADF;AAWD,GAnBH,CADF,CADF;AAyBD","sourcesContent":["import React from \"react\";\n\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\n\nimport {\n  ErrorBoundary,\n  Facet,\n  SearchProvider,\n  SearchBox,\n  Results,\n  PagingInfo,\n  ResultsPerPage,\n  Paging,\n  Sorting,\n  WithSearch\n} from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\nimport {\n  buildAutocompleteQueryConfig,\n  buildFacetConfigFromConfig,\n  buildSearchOptionsFromConfig,\n  buildSortOptionsFromConfig,\n  getConfig,\n  getFacetFields\n} from \"./config/config-helper\";\n\nconst { hostIdentifier, searchKey, endpointBase, engineName } = getConfig();\nconst connector = new AppSearchAPIConnector({\n  searchKey,\n  engineName,\n  hostIdentifier,\n  endpointBase\n});\nconst config = {\n  searchQuery: {\n    facets: buildFacetConfigFromConfig(),\n    ...buildSearchOptionsFromConfig()\n  },\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\n\nexport default function App() {\n  return (\n    <SearchProvider config={config}>\n      <WithSearch\n        mapContextToProps={({ searchTerm, setSearchTerm, results }) => ({\n          searchTerm,\n          setSearchTerm,\n          results\n        })}\n      >\n        {({ searchTerm, setSearchTerm, results }) => {\n          return (\n            <div>\n              <input\n                value={searchTerm}\n                onChange={e => setSearchTerm(e.target.value)}\n              />\n              {results.map(r => (\n                <div key={r.id}>{r.domain.raw}</div>\n              ))}\n            </div>\n          );\n        }}\n      </WithSearch>\n    </SearchProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}