{"ast":null,"code":"import _objectSpread from \"/Users/pascalchristen/Documents/Development/searchzone-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/pascalchristen/Documents/Development/searchzone-website/src/components/DomainResult.js\";\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport green from '@material-ui/core/colors/green';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport Dns from '@material-ui/icons/Dns';\nimport Divider from '@material-ui/core/Divider';\nimport { TextFields, VpnKey, MailOutline, DoneOutline, AlternateEmail, Filter6, Filter4 } from '@material-ui/icons';\nvar useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nfunction Valid() {//console.log(\"Test\")\n}\n\nfunction getFieldType(result, field, type) {\n  if (result[field]) return result[field][type];\n}\n\nfunction getRaw(result, field) {\n  return getFieldType(result, field, \"raw\");\n}\n\nfunction getSnippet(result, field) {\n  return getFieldType(result, field, \"snippet\");\n}\n\nfunction htmlEscape(str) {\n  if (!str) return \"\";\n  return String(str).replace(/&/g, \"&amp;\") //.replace(/\"/g, \"&quot;\")\n  .replace(/'/g, \"&#39;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n}\n\nexport function isFieldValueWrapper(object) {\n  //console.log(object)\n  return object && (object.hasOwnProperty(\"raw\") || object.hasOwnProperty(\"snippet\") && !object.hasOwnProperty(\"score\"));\n}\n\nfunction getEscapedField(result, field) {\n  // Fallback to raw values here, because non-string fields\n  // will not have a snippet fallback. Raw values MUST be html escaped.\n  var safeField = htmlEscape(getRaw(result, field)); //console.log(field)\n\n  safeField = safeField.replaceAll(\",\", \"\\n\");\n  return Array.isArray(safeField) ? safeField.join(\",\") : safeField;\n}\n\nfunction getEscapedFields(result) {\n  return Object.keys(result).reduce(function (acc, field) {\n    // If we receive an arbitrary value from the response, we may not properly\n    // handle it, so we should filter out arbitrary values here.\n    //\n    // I.e.,\n    // Arbitrary value: \"_metaField: '1939191'\"\n    // vs.\n    // FieldValueWrapper: \"_metaField: {raw: '1939191'}\"\n    //if (!isFieldValueWrapper(result[field])) return acc;\n    //console.log(field)\n    if (field === 'id') {} //console.log(\"remove\" + field)\n    //return { ...acc, [field]: getEscapedField(result, field) };\n    //console.log(getEscapedField(result, field))\n\n\n    return _objectSpread(_objectSpread({}, acc), {}, {\n      [field]: getEscapedField(result, field)\n    });\n  }, {});\n}\n\nfunction generateListItems(result, icon, field) {\n  var DynamicIconButton = icon;\n  var resultField = result[field];\n  console.log(resultField);\n\n  if (resultField != undefined) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DynamicIconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: resultField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }));\n  }\n}\n\nfunction generateButtonItems(result, icon, field) {\n  var DynamicIconButton = icon;\n  var resultField = result[field];\n  console.log(resultField);\n\n  var disable = function disable() {\n    return resultField === 'true' ? \"\" : \"disabled\";\n  };\n\n  if (resultField != undefined) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"add to favorites\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MailOutline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    })));\n  }\n}\n\nexport default function (_ref) {\n  var result = _ref.result;\n  //const classes = useStyles();\n  //console.log(result)\n  var fields = getEscapedFields(result);\n  console.log(fields);\n  var green = '#00a152'; //console.log(result)\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, fields.domain), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textPrimary\",\n    style: {\n      whiteSpace: 'pre-line'\n    },\n    gutterBottom: true,\n    component: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, generateListItems(fields, Dns, \"ns\"), generateListItems(fields, Filter4, \"a\"), generateListItems(fields, Filter6, \"aaaa\"), generateListItems(fields, AlternateEmail, \"mx\"), generateListItems(fields, VpnKey, \"dnskey\"), generateListItems(fields, TextFields, \"txt\"))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    disableSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, generateButtonItems(fields, DoneOutline, \"valid_domain\"), generateButtonItems(fields, MailOutline, \"valid_info\"))));\n}","map":{"version":3,"sources":["/Users/pascalchristen/Documents/Development/searchzone-website/src/components/DomainResult.js"],"names":["React","makeStyles","CardActionArea","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","green","List","ListItem","ListItemIcon","ListItemText","InboxIcon","Dns","Divider","TextFields","VpnKey","MailOutline","DoneOutline","AlternateEmail","Filter6","Filter4","useStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Valid","getFieldType","result","field","type","getRaw","getSnippet","htmlEscape","str","String","replace","isFieldValueWrapper","object","hasOwnProperty","getEscapedField","safeField","replaceAll","Array","isArray","join","getEscapedFields","Object","keys","reduce","acc","generateListItems","icon","DynamicIconButton","resultField","console","log","undefined","generateButtonItems","disable","fields","domain","whiteSpace"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport green from '@material-ui/core/colors/green';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport Dns from '@material-ui/icons/Dns';\nimport Divider from '@material-ui/core/Divider';\nimport { TextFields, VpnKey, MailOutline, DoneOutline, AlternateEmail, Filter6, Filter4  } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nfunction Valid() {\n    //console.log(\"Test\")\n}\nfunction getFieldType(result, field, type) {\n    if (result[field]) return result[field][type];\n}\n\nfunction getRaw(result, field) {\n    return getFieldType(result, field, \"raw\");\n}\n\nfunction getSnippet(result, field) {\n    return getFieldType(result, field, \"snippet\");\n}\nfunction htmlEscape(str) {\n    if (!str) return \"\";\n\n    return String(str)\n        .replace(/&/g, \"&amp;\")\n        //.replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#39;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\");\n}\n\nexport function isFieldValueWrapper(object) {\n    //console.log(object)\n    return (\n        object && (object.hasOwnProperty(\"raw\") || object.hasOwnProperty(\"snippet\") && !object.hasOwnProperty(\"score\"))\n    );\n}\n\nfunction getEscapedField(result, field) {\n    // Fallback to raw values here, because non-string fields\n    // will not have a snippet fallback. Raw values MUST be html escaped.\n    let safeField =\n        htmlEscape(getRaw(result, field));\n    //console.log(field)\n    safeField = safeField.replaceAll(\",\", \"\\n\");\n    return Array.isArray(safeField) ? safeField.join(\",\") : safeField;\n}\n\nfunction getEscapedFields(result) {\n    return Object.keys(result).reduce((acc, field) => {\n        // If we receive an arbitrary value from the response, we may not properly\n        // handle it, so we should filter out arbitrary values here.\n        //\n        // I.e.,\n        // Arbitrary value: \"_metaField: '1939191'\"\n        // vs.\n        // FieldValueWrapper: \"_metaField: {raw: '1939191'}\"\n        //if (!isFieldValueWrapper(result[field])) return acc;\n        //console.log(field)\n        if(field === 'id') {\n            //console.log(\"remove\" + field)\n            //return { ...acc, [field]: getEscapedField(result, field) };\n        }\n        //console.log(getEscapedField(result, field))\n        return { ...acc, [field]: getEscapedField(result, field) };\n        \n    }, {});\n}\n\nfunction generateListItems(result, icon, field) {\n    const DynamicIconButton = icon;\n    const resultField = result[field]\n    console.log(resultField)\n    if (resultField != undefined) {\n\n    return (\n        <ListItem>\n            <ListItemIcon>\n                <DynamicIconButton />\n            </ListItemIcon>\n            <ListItemText\n                primary={resultField}\n            />\n        </ListItem>\n    );\n    }\n}\n\nfunction generateButtonItems(result, icon, field) {\n    const DynamicIconButton = icon;\n    const resultField = result[field]\n    console.log(resultField)\n    const disable = () => resultField === 'true' ? \"\" : \"disabled\";\n    if (resultField != undefined) {\n        return (\n            <>\n            <IconButton aria-label=\"add to favorites\" >\n                <MailOutline />\n            </IconButton>\n            {/* <IconButton color={result?.valid_domain?.raw === 'true' ? false : true} aria-label=\"share\" >\n                <DoneOutline />\n\n            </IconButton> */}\n            </>\n        );\n    }\n}\n\nexport default function ({ result }) {\n    //const classes = useStyles();\n    //console.log(result)\n    const fields = getEscapedFields(result);\n    console.log(fields)\n    const green = '#00a152';\n    //console.log(result)\n    return (\n        <>\n            <Card>\n                <CardActionArea>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\n                            {fields.domain}\n                        </Typography>\n                        <Divider />\n                        <Typography variant=\"body2\" color=\"textPrimary\" style={{ whiteSpace: 'pre-line' }} gutterBottom component=\"a\">\n                            <List>\n                                {(generateListItems(fields, Dns, \"ns\"))}\n                                {(generateListItems(fields, Filter4, \"a\"))}\n                                {(generateListItems(fields, Filter6, \"aaaa\"))}\n                                {(generateListItems(fields, AlternateEmail, \"mx\"))}\n                                {(generateListItems(fields, VpnKey, \"dnskey\"))}\n                                {(generateListItems(fields, TextFields, \"txt\"))}\n                            </List>\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <Divider />\n                <CardActions disableSpacing>\n                    {(generateButtonItems(fields, DoneOutline, \"valid_domain\"))}\n                    {(generateButtonItems(fields, MailOutline, \"valid_info\"))}\n                </CardActions>\n            </Card>\n         \n        </>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}