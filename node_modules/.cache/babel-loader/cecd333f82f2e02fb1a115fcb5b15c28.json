{"ast":null,"code":"import _objectSpread from \"/Users/pascalchristen/Documents/Development/searchzone-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pascalchristen/Documents/Development/searchzone-website/src/App.js\";\n\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport PacmanLoader from \"react-spinners/ScaleLoader\";\nimport { ErrorBoundary, Facet, SearchProvider, SearchBox, Results, PagingInfo, ResultsPerPage, Paging, Sorting, WithSearch } from \"@elastic/react-search-ui\";\nimport { buildAutocompleteQueryConfig, buildFacetConfigFromConfig, buildSearchOptionsFromConfig, buildSortOptionsFromConfig, getConfig, getFacetFields } from \"./config/config-helper\";\n\nvar _getConfig = getConfig(),\n    hostIdentifier = _getConfig.hostIdentifier,\n    searchKey = _getConfig.searchKey,\n    endpointBase = _getConfig.endpointBase,\n    engineName = _getConfig.engineName;\n\nvar connector = new AppSearchAPIConnector({\n  searchKey,\n  engineName,\n  hostIdentifier,\n  endpointBase\n});\nvar config = {\n  searchQuery: _objectSpread({\n    facets: buildFacetConfigFromConfig()\n  }, buildSearchOptionsFromConfig()),\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\n\nvar PagingInfoView = function PagingInfoView(_ref) {\n  var start = _ref.start,\n      end = _ref.end,\n      searchTerm = _ref.searchTerm;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paging-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, start, \" - \", end, \" - \", searchTerm));\n};\n\nvar SearchBoxView = function SearchBoxView(_ref2) {\n  var _onChange = _ref2.onChange,\n      searchTerm = _ref2.searchTerm,\n      onSubmit = _ref2.onSubmit,\n      autocompletedResults = _ref2.autocompletedResults;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: searchTerm,\n    onChange: function onChange(e) {\n      return _onChange(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default function App() {\n  var _this2 = this;\n\n  return /*#__PURE__*/React.createElement(SearchProvider, {\n    config: config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WithSearch, {\n    mapContextToProps: function mapContextToProps(_ref3) {\n      var searchTerm = _ref3.searchTerm,\n          setSearchTerm = _ref3.setSearchTerm,\n          results = _ref3.results,\n          isLoading = _ref3.isLoading,\n          wasSearched = _ref3.wasSearched;\n      return {\n        searchTerm,\n        setSearchTerm,\n        results,\n        isLoading,\n        wasSearched\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var searchTerm = _ref4.searchTerm,\n        setSearchTerm = _ref4.setSearchTerm,\n        results = _ref4.results,\n        isLoading = _ref4.isLoading,\n        wasSearched = _ref4.wasSearched;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchBox, {\n      autocompleteSuggestions: true,\n      searchAsYouType: false,\n      autocompleteMinimumCharacters: 3,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(PacmanLoader, {\n      size: 100,\n      color: \"blue\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, !isLoading && wasSearched && /*#__PURE__*/React.createElement(Sorting, {\n      label: \"Sort by\",\n      sortOptions: buildSortOptionsFromConfig(),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }), getFacetFields().map(function (field) {\n      return /*#__PURE__*/React.createElement(Facet, {\n        key: field,\n        field: field,\n        label: getFacetFieldsNames(),\n        isFilterable: true,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      });\n    })), results.map(function (r) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: r.id,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, r.domain.raw);\n    }), /*#__PURE__*/React.createElement(PagingInfo, {\n      view: PagingInfoView,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }));\n  }));\n}","map":{"version":3,"sources":["/Users/pascalchristen/Documents/Development/searchzone-website/src/App.js"],"names":["React","AppSearchAPIConnector","PacmanLoader","ErrorBoundary","Facet","SearchProvider","SearchBox","Results","PagingInfo","ResultsPerPage","Paging","Sorting","WithSearch","buildAutocompleteQueryConfig","buildFacetConfigFromConfig","buildSearchOptionsFromConfig","buildSortOptionsFromConfig","getConfig","getFacetFields","hostIdentifier","searchKey","endpointBase","engineName","connector","config","searchQuery","facets","autocompleteQuery","apiConnector","alwaysSearchOnInitialLoad","PagingInfoView","start","end","searchTerm","SearchBoxView","onChange","onSubmit","autocompletedResults","e","target","value","App","setSearchTerm","results","isLoading","wasSearched","map","field","getFacetFieldsNames","r","id","domain","raw"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport PacmanLoader from \"react-spinners/ScaleLoader\";\nimport {\n  ErrorBoundary,\n  Facet,\n  SearchProvider,\n  SearchBox,\n  Results,\n  PagingInfo,\n  ResultsPerPage,\n  Paging,\n  Sorting,\n  WithSearch\n} from \"@elastic/react-search-ui\";\n\nimport {\n  buildAutocompleteQueryConfig,\n  buildFacetConfigFromConfig,\n  buildSearchOptionsFromConfig,\n  buildSortOptionsFromConfig,\n  getConfig,\n  getFacetFields\n} from \"./config/config-helper\";\n\nconst { hostIdentifier, searchKey, endpointBase, engineName } = getConfig();\nconst connector = new AppSearchAPIConnector({\n  searchKey,\n  engineName,\n  hostIdentifier,\n  endpointBase\n});\nconst config = {\n  searchQuery: {\n    facets: buildFacetConfigFromConfig(),\n    ...buildSearchOptionsFromConfig()\n  },\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\n\nconst PagingInfoView = ({ start, end, searchTerm }) => (\n  <div className=\"paging-info\">\n    <strong>\n      {start} - {end} - {searchTerm}\n    </strong>\n  </div>\n);\n\nconst SearchBoxView = ({ onChange, searchTerm, onSubmit, autocompletedResults }) => (\n  <div className=\"search-bar\">\n    <input value={searchTerm} onChange={e => onChange(e.target.value)} />\n  </div>\n);\n\nexport default function App() {\n  return (\n    <SearchProvider config={config}>\n      <WithSearch\n        mapContextToProps={({ searchTerm, setSearchTerm, results, isLoading, wasSearched }) => ({\n          searchTerm,\n          setSearchTerm,\n          results,\n          isLoading,\n          wasSearched\n        })}\n      >\n        {({ searchTerm, setSearchTerm, results, isLoading, wasSearched }) => {\n          return (\n            <div>\n              <SearchBox autocompleteSuggestions={true} searchAsYouType={false} autocompleteMinimumCharacters={3} />\n              <div>\n                {isLoading && (\n                  <PacmanLoader size={100} color=\"blue\" />\n                )}\n              </div>\n              <div>\n                {!isLoading && wasSearched && (\n                  <Sorting\n                    label={\"Sort by\"}\n                    sortOptions={buildSortOptionsFromConfig()}\n                  />\n                )}\n                {getFacetFields().map(field => (\n                  <Facet key={field} field={field}  label={getFacetFieldsNames()} isFilterable={true} />\n                ))}\n              </div>\n              {results.map(r => (\n                <div key={r.id}>{r.domain.raw}</div>\n              ))}\n              <PagingInfo view={PagingInfoView} />\n            </div>\n          );\n        }}\n      </WithSearch>\n    </SearchProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}