{"ast":null,"code":"var _jsxFileName = \"/Users/pascalchristen/Documents/Development/searchzone-website/src/views/Home.js\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport PacmanLoader from \"react-spinners/ScaleLoader\";\nimport { ErrorBoundary, Facet, SearchProvider, SearchBox, Results, PagingInfo, ResultsPerPage, Paging, Sorting, WithSearch } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\"; //import \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\nimport { buildAutocompleteQueryConfig, buildFacetConfigFromConfig, buildSearchOptionsFromConfig, buildSortOptionsFromConfig, getConfig, getFacetFields } from \"./config/config-helper\";\nexport default function App() {\n  var _this = this;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SearchProvider, {\n    config: config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WithSearch, {\n    mapContextToProps: function mapContextToProps(_ref) {\n      var wasSearched = _ref.wasSearched,\n          isLoading = _ref.isLoading;\n      return {\n        wasSearched,\n        isLoading\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, function (_ref2) {\n    var wasSearched = _ref2.wasSearched,\n        isLoading = _ref2.isLoading;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(HeaderBar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Layout //header={\n    //<SearchBox autocompleteSuggestions={true} searchAsYouType={false} autocompleteMinimumCharacters={3} />\n    //<CustomizedInputBase></CustomizedInputBase>\n    //}\n    , {\n      sideContent: /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 45\n        }\n      }, !isLoading && wasSearched && /*#__PURE__*/React.createElement(Sorting, {\n        label: \"Sort by\",\n        sortOptions: buildSortOptionsFromConfig(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 53\n        }\n      }), getFacetFields().map(function (field) {\n        return /*#__PURE__*/React.createElement(Facet, {\n          key: field,\n          field: field,\n          label: field,\n          isFilterable: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 53\n          }\n        });\n      })),\n      bodyContent: /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 45\n        }\n      }, isLoading && /*#__PURE__*/React.createElement(PacmanLoader, {\n        size: 100,\n        color: \"blue\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 53\n        }\n      }), wasSearched && /*#__PURE__*/React.createElement(Results, {\n        titleField: getConfig().titleField,\n        urlField: getConfig().urlField,\n        shouldTrackClickThrough: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 53\n        }\n      })),\n      bodyHeader: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 45\n        }\n      }, wasSearched && /*#__PURE__*/React.createElement(PagingInfo, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 65\n        }\n      }), wasSearched && /*#__PURE__*/React.createElement(ResultsPerPage, {\n        options: [5, 10, 15],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 65\n        }\n      })),\n      bodyFooter: /*#__PURE__*/React.createElement(Paging, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 53\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }\n    })));\n  })));\n}","map":{"version":3,"sources":["/Users/pascalchristen/Documents/Development/searchzone-website/src/views/Home.js"],"names":["AppSearchAPIConnector","PacmanLoader","ErrorBoundary","Facet","SearchProvider","SearchBox","Results","PagingInfo","ResultsPerPage","Paging","Sorting","WithSearch","Layout","buildAutocompleteQueryConfig","buildFacetConfigFromConfig","buildSearchOptionsFromConfig","buildSortOptionsFromConfig","getConfig","getFacetFields","App","config","wasSearched","isLoading","map","field","titleField","urlField"],"mappings":"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","sourcesContent":["import AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport PacmanLoader from \"react-spinners/ScaleLoader\";\nimport {\n    ErrorBoundary,\n    Facet,\n    SearchProvider,\n    SearchBox,\n    Results,\n    PagingInfo,\n    ResultsPerPage,\n    Paging,\n    Sorting,\n    WithSearch\n} from \"@elastic/react-search-ui\";\n\nimport { Layout } from \"@elastic/react-search-ui-views\";\n//import \"@elastic/react-search-ui-views/lib/styles/styles.css\";\nimport {\n    buildAutocompleteQueryConfig,\n    buildFacetConfigFromConfig,\n    buildSearchOptionsFromConfig,\n    buildSortOptionsFromConfig,\n    getConfig,\n    getFacetFields\n} from \"./config/config-helper\";\n\nexport default function App() {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <SearchProvider config={config}>\n                <WithSearch mapContextToProps={({ wasSearched, isLoading }) => ({ wasSearched, isLoading })}>\n                    {({ wasSearched, isLoading }) => {\n                        return (\n                            <div className=\"App\">\n                                <HeaderBar></HeaderBar>\n                                <ErrorBoundary>\n                                    <Layout\n                                        //header={\n                                        //<SearchBox autocompleteSuggestions={true} searchAsYouType={false} autocompleteMinimumCharacters={3} />\n                                        //<CustomizedInputBase></CustomizedInputBase>\n                                        //}\n                                        sideContent={\n                                            <div>\n                                                {!isLoading && wasSearched && (\n                                                    <Sorting\n                                                        label={\"Sort by\"}\n                                                        sortOptions={buildSortOptionsFromConfig()}\n                                                    />\n                                                )}\n                                                {getFacetFields().map(field => (\n                                                    <Facet key={field} field={field} label={field} isFilterable={true} />\n                                                ))}\n                                            </div>\n                                        }\n                                        bodyContent={\n                                            <div>\n\n                                                {isLoading && (\n                                                    <PacmanLoader size={100} color=\"blue\" />\n                                                )}\n                                                {wasSearched && (\n                                                    <Results\n                                                        titleField={getConfig().titleField}\n                                                        urlField={getConfig().urlField}\n                                                        shouldTrackClickThrough={true}\n                                                    />\n                                                )}\n                                            </div>\n                                        }\n                                        bodyHeader={\n                                            <React.Fragment>\n                                                {wasSearched && <PagingInfo />}\n                                                {wasSearched && <ResultsPerPage options={[5, 10, 15]} />}\n                                            </React.Fragment>\n                                        }\n                                        bodyFooter={<Paging />}\n                                    />\n                                </ErrorBoundary>\n                            </div>\n                        );\n                    }}\n                </WithSearch>\n            </SearchProvider>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}