{"ast":null,"code":"import _objectSpread from \"/Users/pascalchristen/Documents/Development/searchzone-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/pascalchristen/Documents/Development/searchzone-website/src/views/Home.js\";\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchBoxMaterial from \"../components/SearchBoxMaterial\";\nimport ResultView from \"../components/DomainResult\";\nimport PagingView from \"../components/PagingView\";\nimport FacetView from \"../components/FacetView\";\nimport SortView from \"../components/SortView\"; //import { Paging as PagingView } from \"@elastic/react-search-ui-views\";\n\nimport Grid from '@material-ui/core/Grid';\nimport { ErrorBoundary, Facet, SearchProvider, SearchBox, Results, PagingInfo, ResultsPerPage, Paging, Sorting, WithSearch } from \"@elastic/react-search-ui\";\nimport CssBaseline from '@material-ui/core/CssBaseline'; // import \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\nimport { buildAutocompleteQueryConfig, buildFacetConfigFromConfig, buildSearchOptionsFromConfig, buildSortOptionsFromConfig, getConfig, getFacetFields } from \"../config/config-helper\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Divider, FormControl, Paper } from \"@material-ui/core\";\n\nvar _getConfig = getConfig(),\n    hostIdentifier = _getConfig.hostIdentifier,\n    searchKey = _getConfig.searchKey,\n    endpointBase = _getConfig.endpointBase,\n    engineName = _getConfig.engineName;\n\nvar connector = new AppSearchAPIConnector({\n  searchKey,\n  engineName,\n  hostIdentifier,\n  endpointBase\n});\nvar config = {\n  searchQuery: _objectSpread({\n    facets: buildFacetConfigFromConfig()\n  }, buildSearchOptionsFromConfig()),\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true,\n  initialState: {\n    resultsPerPage: 5\n  }\n};\n\nfunction reportChange(value) {\n  console.log(\"Blub\" + value);\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    }\n  };\n});\nexport default function Home() {\n  var _this = this;\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SearchProvider, {\n    config: config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WithSearch, {\n    mapContextToProps: function mapContextToProps(_ref) {\n      var wasSearched = _ref.wasSearched,\n          isLoading = _ref.isLoading;\n      return {\n        wasSearched,\n        isLoading\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, function (_ref2) {\n    var wasSearched = _ref2.wasSearched,\n        isLoading = _ref2.isLoading;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        padding: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(SearchBoxMaterial, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 45\n      }\n    }), isLoading && /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 4,\n      lg: 4,\n      xl: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 45\n      }\n    }, getFacetFields().map(function (field) {\n      return /*#__PURE__*/React.createElement(Facet, {\n        key: field,\n        view: FacetView,\n        field: field,\n        label: field,\n        isFilterable: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 53\n        }\n      });\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 8,\n      lg: 8,\n      xl: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 45\n      }\n    }, wasSearched && /*#__PURE__*/React.createElement(Results, {\n      resultView: ResultView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paging, {\n      view: PagingView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Paging, {\n      view: function view(props) {\n        return PagingView(_objectSpread(_objectSpread({}, props), {}, {\n          onChange: function onChange(page) {\n            reportChange(page);\n            return props.onChange(page);\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 49\n      }\n    }), wasSearched && /*#__PURE__*/React.createElement(Sorting, {\n      view: SortView,\n      label: \"Sort by\",\n      sortOptions: buildSortOptionsFromConfig(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 53\n      }\n    }))))));\n  })));\n}","map":{"version":3,"sources":["/Users/pascalchristen/Documents/Development/searchzone-website/src/views/Home.js"],"names":["React","AppSearchAPIConnector","makeStyles","SearchBoxMaterial","ResultView","PagingView","FacetView","SortView","Grid","ErrorBoundary","Facet","SearchProvider","SearchBox","Results","PagingInfo","ResultsPerPage","Paging","Sorting","WithSearch","CssBaseline","buildAutocompleteQueryConfig","buildFacetConfigFromConfig","buildSearchOptionsFromConfig","buildSortOptionsFromConfig","getConfig","getFacetFields","LinearProgress","Divider","FormControl","Paper","hostIdentifier","searchKey","endpointBase","engineName","connector","config","searchQuery","facets","autocompleteQuery","apiConnector","alwaysSearchOnInitialLoad","initialState","resultsPerPage","reportChange","value","console","log","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Home","classes","wasSearched","isLoading","map","field","props","onChange","page"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchBoxMaterial from \"../components/SearchBoxMaterial\"\nimport ResultView from \"../components/DomainResult\"\nimport PagingView from \"../components/PagingView\"\nimport FacetView from \"../components/FacetView\"\nimport SortView from \"../components/SortView\"\n//import { Paging as PagingView } from \"@elastic/react-search-ui-views\";\nimport Grid from '@material-ui/core/Grid';\nimport {\n    ErrorBoundary,\n    Facet,\n    SearchProvider,\n    SearchBox,\n    Results,\n    PagingInfo,\n    ResultsPerPage,\n    Paging,\n    Sorting,\n    WithSearch\n} from \"@elastic/react-search-ui\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import \"@elastic/react-search-ui-views/lib/styles/styles.css\";\nimport {\n    buildAutocompleteQueryConfig,\n    buildFacetConfigFromConfig,\n    buildSearchOptionsFromConfig,\n    buildSortOptionsFromConfig,\n    getConfig,\n    getFacetFields\n} from \"../config/config-helper\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Divider, FormControl, Paper } from \"@material-ui/core\";\nconst { hostIdentifier, searchKey, endpointBase, engineName } = getConfig();\nconst connector = new AppSearchAPIConnector({\n    searchKey,\n    engineName,\n    hostIdentifier,\n    endpointBase\n});\nconst config = {\n    searchQuery: {\n        facets: buildFacetConfigFromConfig(),\n        ...buildSearchOptionsFromConfig()\n    },\n    autocompleteQuery: buildAutocompleteQueryConfig(),\n    apiConnector: connector,\n    alwaysSearchOnInitialLoad: true,\n    initialState: {\n        resultsPerPage: 5\n    }\n};\n\nfunction reportChange(value) {\n    console.log(\"Blub\" + value)\n}\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\nexport default function Home() {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <SearchProvider config={config}>\n\n                <WithSearch mapContextToProps={({ wasSearched, isLoading }) => ({ wasSearched, isLoading })}>\n                    {({ wasSearched, isLoading }) => {\n                        return (\n                            <div className=\"App\" style={{ padding: 20 }}>\n                                <ErrorBoundary>\n                                    {/* <Grid container spacing={3}>\n                                        <Grid item xs={12} sm={12}>\n                                            <Paper className={classes.paper}>xs=12</Paper>\n                                        </Grid>\n                                        <Grid item xs={12} sm={12} md={4} lg={5} xl={3}>\n                                            <Paper className={classes.paper}>xs=6</Paper>\n                                        </Grid>\n                                        <Grid item xs={12} sm={12} md={8} lg={7} xl={9}>\n                                            <Paper className={classes.paper}>xs=6</Paper>\n                                    </Grid> */}\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={12} sm={12}>\n                                            {/* //<SearchBox autocompleteSuggestions={true} searchAsYouType={false} autocompleteMinimumCharacters={3} />\n                                            //<CustomizedInputBase></CustomizedInputBase>\n\n                                            // <SearchBox \n                                            //     autocompleteSuggestions={true}\n                                            //     inputView={({ getAutocomplete, getInputProps, getButtonProps }) => (\n                                            //         <>\n                                            //             <SearchBar\n                                            //                 onRequestSearch={() => console.log('onRequestSearch')}\n                                            //                 style={{\n                                            //                     margin: '0 auto',\n                                            //                     maxWidth: 800\n                                            //                 }}\n                                            //             />\n                                            //             {getAutocomplete()}\n                                            //         </>\n                                            //     )}\n                                            // />\n                                            // <SearchBox\n                                            //     autocompleteView={({ autocompletedResults, getItemProps }) => (\n                                            //         <div className=\"sui-search-box__autocomplete-container\">\n                                            //             {autocompletedResults.map((result, i) => ( \n                                            //                 <div\n                                            //                     {...getItemProps({\n                                            //                         key: result.id.raw,\n                                            //                         item: result\n                                            //                     })}\n                                            //                 >\n                                            //                     Result {i}: {result.title.snippet} \n                                            //                 </div>\n                                            //             ))}\n                                            //         </div>\n                                            //     )}\n                                            // />\n                                            // <SearchBox\n                                            //     autocompleteSuggestions={true}\n                                            //     inputView={({ getAutocomplete, getInputProps, getButtonProps }) => (\n                                            //         <>\n                                            //         <div className=\"sui-search-box__wrapper\">\n                                            //                 <Input {...getInputProps({ placeholder: 'Search games' })} />\n                                            //             {getAutocomplete()}\n                                            //         </div>\n                                            //         <button {...getButtonProps()}>\n                                            //             <svg viewBox=\"0 0 250 250\" width=\"20\" height=\"20\" role=\"img\">\n                                            //             <title>Search</title>\n                                            //             <path d=\"M244.186 214.604l-54.379-54.378c-.289-.289-.628-.491-.93-.76 10.7-16.231 16.945-35.66 16.945-56.554C205.822 46.075 159.747 0 102.911 0S0 46.075 0 102.911c0 56.835 46.074 102.911 102.91 102.911 20.895 0 40.323-6.245 56.554-16.945.269.301.47.64.759.929l54.38 54.38c8.169 8.168 21.413 8.168 29.583 0 8.168-8.169 8.168-21.413 0-29.582zm-141.275-44.458c-37.134 0-67.236-30.102-67.236-67.235 0-37.134 30.103-67.236 67.236-67.236 37.132 0 67.235 30.103 67.235 67.236s-30.103 67.235-67.235 67.235z\" />\n                                            //             </svg>\n                                            //         </button>\n                                            //         </>\n                                            //     )}\n                                            //     />*/}\n                                            <SearchBoxMaterial></SearchBoxMaterial>\n                                            <Divider></Divider>\n\n                                            {isLoading && (\n                                                <LinearProgress />\n                                            )}\n                                        </Grid>\n                                        {/* // <SearchBox\n                                            // autocompleteSuggestions={true}\n                                            // inputView={({ getAutocomplete, getInputProps, getButtonProps }) => (\n                                            //     <>\n                                            //         <Autocomplete\n                                            //             id=\"free-solo-demo\"\n                                            //             freeSolo\n                                            //             options={getAutocomplete()}\n                                            //             renderInput={(getInputProps) => (\n                                            //                 <TextField {...getInputProps} label=\"freeSolo\" margin=\"normal\" variant=\"outlined\" />\n                                            //             )}\n                                            //         />\n                                            //         <TextField {...getInputProps({ placeholder: 'Search games' })} label=\"freeSolo\" margin=\"normal\" variant=\"outlined\" />\n                                            //     </>\n                                            // )}\n                                            // /> */}\n                                        {/* <Grid item xs={12}>\n                                            <React.Fragment>\n                                                {wasSearched && <PagingInfo />}\n                                                {wasSearched && <ResultsPerPage options={[5, 10, 15]} />}\n                                            </React.Fragment>\n                                        </Grid> */}\n                                        <Grid item xs={12} sm={12} md={4} lg={4} xl={2}>\n                                            <FormControl>\n\n                                                {getFacetFields().map(field => (\n                                                    <Facet key={field} view={FacetView}  field={field} label={field} isFilterable={true} />\n                                                ))}\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid item xs={12} sm={12} md={8} lg={8} xl={10}>\n                                            <div>\n                                                {wasSearched && (\n                                                    <Results resultView={ResultView}\n                                                    />\n\n                                                )}\n                                            </div>\n                                        </Grid>\n\n                                        <Grid item xs={12} sm={12}>\n                                            <>\n                                                <Paging view={PagingView} />\n                                                {/* <Paging\n                                                    view={({ totalPages, onChange, current, page}) => (\n                                                        <div className=\"paging-info\">\n                                                            <Pagination count={totalPages} color=\"primary\" onChange={onChange} />\n                                                        </div>\n\n                                                    )}\n                                                /> */}\n                                                <Paging\n                                                    view={props =>\n                                                        PagingView({\n                                                            ...props,\n                                                            onChange: page => {\n                                                                reportChange(page);\n                                                                return props.onChange(page);\n                                                            }\n                                                        })\n                                                    }\n                                                />\n                                                {wasSearched && (\n                                                    <Sorting view={SortView}\n                                                        label={\"Sort by\"}\n                                                        sortOptions={buildSortOptionsFromConfig()}\n                                                    />\n                                                )}\n                                            </>\n                                        </Grid>\n                                    </Grid>\n                                </ErrorBoundary>\n                            </div>\n                        );\n                    }}\n                </WithSearch>\n            </SearchProvider>\n        </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}